mutate(` ` = paste(rep(" ", 30), collapse = " ")) %>%  # close the `mutate()` properly
select(Exposure, Outcome, nSNP, Method, OR, lo_ci, up_ci, se, ` `, `OR..95..CI.`, P) %>%  # adjust the column order
rename(`OR (95% CI)` = `OR..95..CI.`) %>%
mutate(P = scientific(P, digits = 3))  # Convert P-value to scientific notation with 3 digits
df_clean <- na.omit(df)
p1 <- forest(
df_clean[, c(1:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 5,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 5,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
df_clean <- na.omit(df)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
res <- read.csv("C:/Users/hh24668/OneDrive - University of Bristol/Documents/finngen_R12_N14_FEMGENPAIN.csv", header = TRUE)
df <- res[, c(
"id.exposure", "id.outcome",
"nsnp_Inverse.variance.weighted", "logor_Inverse.variance.weighted", "logor_lci95_Inverse.variance.weighted", "logor_uci95_Inverse.variance.weighted", "logOR..95..CI._Inverse.variance.weighted", "se_Inverse.variance.weighted", "pval_Inverse.variance.weighted",
"nsnp_MR.Egger", "logor_MR.Egger", "logor_lci95_MR.Egger", "logor_uci95_MR.Egger", "logOR..95..CI._MR.Egger", "se_MR.Egger", "pval_MR.Egger",
"nsnp_Weighted.median", "logor_Weighted.median", "logor_lci95_Weighted.median", "logor_uci95_Weighted.median", "logOR..95..CI._Weighted.median", "se_Weighted.median", "pval_Weighted.median",
"nsnp_Simple.mode", "logor_Simple.mode", "logor_lci95_Simple.mode", "logor_uci95_Simple.mode", "logOR..95..CI._Simple.mode", "se_Simple.mode", "pval_Simple.mode",
"nsnp_Weighted.mode", "logor_Weighted.mode", "logor_lci95_Weighted.mode", "logor_uci95_Weighted.mode", "logOR..95..CI._Weighted.mode", "se_Weighted.mode", "pval_Weighted.mode",
"nsnp_MR_PRESSO", "logor_MR_PRESSO", "logor_lci95_MR_PRESSO", "logor_uci95_MR_PRESSO", "logOR..95..CI._MR_PRESSO", "se_MR_PRESSO", "pval_MR_PRESSO",
"nSNP_cML", "logor_cML", "logor_lci95_cML", "logor_uci95_cML", "logOR..95..CI._cML", "se_cML", "Pvalue"
)]
df <- data.frame(
Exposure = c(df$id.exposure[1], rep("", 6)),
Outcome = c(df$id.outcome[1], rep("", 6)),
nSNP = c(df$nsnp_Inverse.variance.weighted[1], df$nsnp_MR.Egger[1], df$nsnp_Weighted.median[1], df$nsnp_Simple.mode[1], df$nsnp_Weighted.mode[1], df$nsnp_MR_PRESSO[1], df$nSNP_cML[1]),
OR = c(df$logor_Inverse.variance.weighted[1], df$logor_MR.Egger[1], df$logor_Weighted.median[1], df$logor_Simple.mode[1], df$logor_Weighted.mode[1], df$logor_MR_PRESSO[1], df$logor_cML[1]),
lo_ci = c(df$logor_lci95_Inverse.variance.weighted[1], df$logor_lci95_MR.Egger[1], df$logor_lci95_Weighted.median[1], df$logor_lci95_Simple.mode[1], df$logor_lci95_Weighted.mode[1], df$logor_lci95_MR_PRESSO[1], df$logor_lci95_cML[1]),
up_ci = c(df$logor_uci95_Inverse.variance.weighted[1], df$logor_uci95_MR.Egger[1], df$logor_uci95_Weighted.median[1], df$logor_uci95_Simple.mode[1], df$logor_uci95_Weighted.mode[1], df$logor_uci95_MR_PRESSO[1], df$logor_uci95_cML[1]),
`OR (95% CI)` = c(df$`logOR..95..CI._Inverse.variance.weighted`[1], df$`logOR..95..CI._MR.Egger`[1], df$`logOR..95..CI._Weighted.median`[1], df$`logOR..95..CI._Simple.mode`[1], df$`logOR..95..CI._Weighted.mode`[1], df$`logOR..95..CI._MR_PRESSO`[1], df$`logOR..95..CI._cML`[1]),
se = c(df$se_Inverse.variance.weighted[1], df$se_MR.Egger[1], df$se_Weighted.median[1], df$se_Simple.mode[1], df$se_Weighted.mode[1], df$se_MR_PRESSO[1], df$se_cML[1]),
P = c(df$pval_Inverse.variance.weighted[1], df$pval_MR.Egger[1], df$pval_Weighted.median[1], df$pval_Simple.mode[1], df$pval_Weighted.mode[1], df$pval_MR_PRESSO[1], df$Pvalue[1]),
Method = c("IVW", "MR-Egger", "Weighted Median", "Simple Mode", "Weighted Mode", "MR-PRESSO", "cML")
)
df <- df %>%
mutate(` ` = paste(rep(" ", 30), collapse = " ")) %>%  # close the `mutate()` properly
select(Exposure, Outcome, nSNP, Method, OR, lo_ci, up_ci, se, ` `, `OR..95..CI.`, P) %>%  # adjust the column order
rename(`OR (95% CI)` = `OR..95..CI.`) %>%
mutate(P = scientific(P, digits = 3))  # Convert P-value to scientific notation with 3 digits
df_clean <- na.omit(df)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
res <- read.csv("C:/Users/hh24668/OneDrive - University of Bristol/Documents/finngen_R12_N14_OVARYCYST.csv", header = TRUE)
df <- res[, c(
"id.exposure", "id.outcome",
"nsnp_Inverse.variance.weighted", "logor_Inverse.variance.weighted", "logor_lci95_Inverse.variance.weighted", "logor_uci95_Inverse.variance.weighted", "logOR..95..CI._Inverse.variance.weighted", "se_Inverse.variance.weighted", "pval_Inverse.variance.weighted",
"nsnp_MR.Egger", "logor_MR.Egger", "logor_lci95_MR.Egger", "logor_uci95_MR.Egger", "logOR..95..CI._MR.Egger", "se_MR.Egger", "pval_MR.Egger",
"nsnp_Weighted.median", "logor_Weighted.median", "logor_lci95_Weighted.median", "logor_uci95_Weighted.median", "logOR..95..CI._Weighted.median", "se_Weighted.median", "pval_Weighted.median",
"nsnp_Simple.mode", "logor_Simple.mode", "logor_lci95_Simple.mode", "logor_uci95_Simple.mode", "logOR..95..CI._Simple.mode", "se_Simple.mode", "pval_Simple.mode",
"nsnp_Weighted.mode", "logor_Weighted.mode", "logor_lci95_Weighted.mode", "logor_uci95_Weighted.mode", "logOR..95..CI._Weighted.mode", "se_Weighted.mode", "pval_Weighted.mode",
"nsnp_MR_PRESSO", "logor_MR_PRESSO", "logor_lci95_MR_PRESSO", "logor_uci95_MR_PRESSO", "logOR..95..CI._MR_PRESSO", "se_MR_PRESSO", "pval_MR_PRESSO",
"nSNP_cML", "logor_cML", "logor_lci95_cML", "logor_uci95_cML", "logOR..95..CI._cML", "se_cML", "Pvalue"
)]
df <- data.frame(
Exposure = c(df$id.exposure[1], rep("", 6)),
Outcome = c(df$id.outcome[1], rep("", 6)),
nSNP = c(df$nsnp_Inverse.variance.weighted[1], df$nsnp_MR.Egger[1], df$nsnp_Weighted.median[1], df$nsnp_Simple.mode[1], df$nsnp_Weighted.mode[1], df$nsnp_MR_PRESSO[1], df$nSNP_cML[1]),
OR = c(df$logor_Inverse.variance.weighted[1], df$logor_MR.Egger[1], df$logor_Weighted.median[1], df$logor_Simple.mode[1], df$logor_Weighted.mode[1], df$logor_MR_PRESSO[1], df$logor_cML[1]),
lo_ci = c(df$logor_lci95_Inverse.variance.weighted[1], df$logor_lci95_MR.Egger[1], df$logor_lci95_Weighted.median[1], df$logor_lci95_Simple.mode[1], df$logor_lci95_Weighted.mode[1], df$logor_lci95_MR_PRESSO[1], df$logor_lci95_cML[1]),
up_ci = c(df$logor_uci95_Inverse.variance.weighted[1], df$logor_uci95_MR.Egger[1], df$logor_uci95_Weighted.median[1], df$logor_uci95_Simple.mode[1], df$logor_uci95_Weighted.mode[1], df$logor_uci95_MR_PRESSO[1], df$logor_uci95_cML[1]),
`OR (95% CI)` = c(df$`logOR..95..CI._Inverse.variance.weighted`[1], df$`logOR..95..CI._MR.Egger`[1], df$`logOR..95..CI._Weighted.median`[1], df$`logOR..95..CI._Simple.mode`[1], df$`logOR..95..CI._Weighted.mode`[1], df$`logOR..95..CI._MR_PRESSO`[1], df$`logOR..95..CI._cML`[1]),
se = c(df$se_Inverse.variance.weighted[1], df$se_MR.Egger[1], df$se_Weighted.median[1], df$se_Simple.mode[1], df$se_Weighted.mode[1], df$se_MR_PRESSO[1], df$se_cML[1]),
P = c(df$pval_Inverse.variance.weighted[1], df$pval_MR.Egger[1], df$pval_Weighted.median[1], df$pval_Simple.mode[1], df$pval_Weighted.mode[1], df$pval_MR_PRESSO[1], df$Pvalue[1]),
Method = c("IVW", "MR-Egger", "Weighted Median", "Simple Mode", "Weighted Mode", "MR-PRESSO", "cML")
)
df <- df %>%
mutate(` ` = paste(rep(" ", 30), collapse = " ")) %>%  # close the `mutate()` properly
select(Exposure, Outcome, nSNP, Method, OR, lo_ci, up_ci, se, ` `, `OR..95..CI.`, P) %>%  # adjust the column order
rename(`OR (95% CI)` = `OR..95..CI.`) %>%
mutate(P = scientific(P, digits = 3))  # Convert P-value to scientific notation with 3 digits
df_clean <- na.omit(df)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4),
theme = tm,
ci_col = ci_colors
)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 4),
ticks_at = c(0, 1, 2, 3, 4),
theme = tm,
ci_col = ci_colors
)
print(p1)
res <- read.csv("C:/Users/hh24668/OneDrive - University of Bristol/Documents/PCOS_summary_data_19092018.csv", header = TRUE)
df <- res[, c(
"id.exposure", "id.outcome",
"nsnp_Inverse.variance.weighted", "logor_Inverse.variance.weighted", "logor_lci95_Inverse.variance.weighted", "logor_uci95_Inverse.variance.weighted", "logOR..95..CI._Inverse.variance.weighted", "se_Inverse.variance.weighted", "pval_Inverse.variance.weighted",
"nsnp_MR.Egger", "logor_MR.Egger", "logor_lci95_MR.Egger", "logor_uci95_MR.Egger", "logOR..95..CI._MR.Egger", "se_MR.Egger", "pval_MR.Egger",
"nsnp_Weighted.median", "logor_Weighted.median", "logor_lci95_Weighted.median", "logor_uci95_Weighted.median", "logOR..95..CI._Weighted.median", "se_Weighted.median", "pval_Weighted.median",
"nsnp_Simple.mode", "logor_Simple.mode", "logor_lci95_Simple.mode", "logor_uci95_Simple.mode", "logOR..95..CI._Simple.mode", "se_Simple.mode", "pval_Simple.mode",
"nsnp_Weighted.mode", "logor_Weighted.mode", "logor_lci95_Weighted.mode", "logor_uci95_Weighted.mode", "logOR..95..CI._Weighted.mode", "se_Weighted.mode", "pval_Weighted.mode",
"nsnp_MR_PRESSO", "logor_MR_PRESSO", "logor_lci95_MR_PRESSO", "logor_uci95_MR_PRESSO", "logOR..95..CI._MR_PRESSO", "se_MR_PRESSO", "pval_MR_PRESSO",
"nSNP_cML", "logor_cML", "logor_lci95_cML", "logor_uci95_cML", "logOR..95..CI._cML", "se_cML", "Pvalue"
)]
df <- data.frame(
Exposure = c(df$id.exposure[1], rep("", 6)),
Outcome = c(df$id.outcome[1], rep("", 6)),
nSNP = c(df$nsnp_Inverse.variance.weighted[1], df$nsnp_MR.Egger[1], df$nsnp_Weighted.median[1], df$nsnp_Simple.mode[1], df$nsnp_Weighted.mode[1], df$nsnp_MR_PRESSO[1], df$nSNP_cML[1]),
OR = c(df$logor_Inverse.variance.weighted[1], df$logor_MR.Egger[1], df$logor_Weighted.median[1], df$logor_Simple.mode[1], df$logor_Weighted.mode[1], df$logor_MR_PRESSO[1], df$logor_cML[1]),
lo_ci = c(df$logor_lci95_Inverse.variance.weighted[1], df$logor_lci95_MR.Egger[1], df$logor_lci95_Weighted.median[1], df$logor_lci95_Simple.mode[1], df$logor_lci95_Weighted.mode[1], df$logor_lci95_MR_PRESSO[1], df$logor_lci95_cML[1]),
up_ci = c(df$logor_uci95_Inverse.variance.weighted[1], df$logor_uci95_MR.Egger[1], df$logor_uci95_Weighted.median[1], df$logor_uci95_Simple.mode[1], df$logor_uci95_Weighted.mode[1], df$logor_uci95_MR_PRESSO[1], df$logor_uci95_cML[1]),
`OR (95% CI)` = c(df$`logOR..95..CI._Inverse.variance.weighted`[1], df$`logOR..95..CI._MR.Egger`[1], df$`logOR..95..CI._Weighted.median`[1], df$`logOR..95..CI._Simple.mode`[1], df$`logOR..95..CI._Weighted.mode`[1], df$`logOR..95..CI._MR_PRESSO`[1], df$`logOR..95..CI._cML`[1]),
se = c(df$se_Inverse.variance.weighted[1], df$se_MR.Egger[1], df$se_Weighted.median[1], df$se_Simple.mode[1], df$se_Weighted.mode[1], df$se_MR_PRESSO[1], df$se_cML[1]),
P = c(df$pval_Inverse.variance.weighted[1], df$pval_MR.Egger[1], df$pval_Weighted.median[1], df$pval_Simple.mode[1], df$pval_Weighted.mode[1], df$pval_MR_PRESSO[1], df$Pvalue[1]),
Method = c("IVW", "MR-Egger", "Weighted Median", "Simple Mode", "Weighted Mode", "MR-PRESSO", "cML")
)
df <- df %>%
mutate(` ` = paste(rep(" ", 30), collapse = " ")) %>%  # close the `mutate()` properly
select(Exposure, Outcome, nSNP, Method, OR, lo_ci, up_ci, se, ` `, `OR..95..CI.`, P) %>%  # adjust the column order
rename(`OR (95% CI)` = `OR..95..CI.`) %>%
mutate(P = scientific(P, digits = 3))  # Convert P-value to scientific notation with 3 digits
df_clean <- na.omit(df)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 4),
ticks_at = c(0, 1, 2, 3, 4),
theme = tm,
ci_col = ci_colors
)
print(p1)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
devtools::document()  # Generate documentation
devtools::build()     # Build the package
devtools::install()   # Install the package
devtools::check()
export(U1_Clean_data_exp)
remotes::install_github("gwendyun/mrfunctions",force = TRUE)
library(TwoSampleMR) #version 0.6.8
library(Oneclick) #version 5.3.0
library(mrfunctions) #my own R package
library(readxl)
library(arrow)
library(data.table)
library(dplyr)
################################
# insomnia exposure. filtered female_topsnps
################################
insomnia_exp_female_S12 <- read_excel("C:/Users/hh24668/OneDrive - University of Bristol/Documents/insomnia_exp_female_S12.xlsx")
insomnia_exp_female_S12 <- U1_maf2eaf(insomnia_exp_female_S12)
View(insomnia_exp_female_S12)
remotes::install_github("gwendyun/mrfunctions",force = TRUE)
remotes::install_github("gwendyun/mrfunctions",force = TRUE)
library(TwoSampleMR) #version 0.6.8
library(Oneclick) #version 5.3.0
library(mrfunctions) #my own R package
library(readxl)
library(arrow)
library(data.table)
library(dplyr)
################################
# insomnia exposure. filtered female_topsnps
################################
insomnia_exp_female_S12 <- read_excel("C:/Users/hh24668/OneDrive - University of Bristol/Documents/insomnia_exp_female_S12.xlsx")
insomnia_exp_female_S12 <- U1_maf2eaf(insomnia_exp_female_S12)
top_insomnia_exp_female_S12 <- insomnia_exp_female_S12[insomnia_exp_female_S12$isTopSNPs == 1, ]
top_insomnia_exp_female_S12 <- dplyr::rename(top_insomnia_exp_female_S12, effect_allele = Allele1)
top_insomnia_exp_female_S12 <- dplyr::rename(top_insomnia_exp_female_S12, other_allele = Allele2)
top_insomnia_exp_female_S12 <- U1_Clean_data_exp(top_insomnia_exp_female_S12, continuous = FALSE, save = FALSE)
View(top_insomnia_exp_female_S12)
femIVs <- U2_extract_instruments(top_insomnia_exp_female_S12,
p = 5e-08,
clump = "online",
r2 = 0.001,
kb = 10000,
max_retries = 3,
pop = "EUR")
write_parquet(femIVs, "C:/Users/hh24668/OneDrive - University of Bristol/Documents/femIVs.parquet")
#filtered male_topsnps
insomnia_exp_male_S10 <- read_excel("C:/Users/hh24668/OneDrive - University of Bristol/Documents/insomnia_exp_male_S10.xlsx")
insomnia_exp_male_S10 <- U1_maf2eaf(insomnia_exp_male_S10)
top_insomnia_exp_male_S10 <- insomnia_exp_male_S10[insomnia_exp_male_S10$isTopSNPs == 1, ]
top_insomnia_exp_male_S10 <- dplyr::rename(top_insomnia_exp_male_S10, effect_allele = Allele1)
top_insomnia_exp_male_S10 <- dplyr::rename(top_insomnia_exp_male_S10, other_allele = Allele2)
top_insomnia_exp_male_S10 <- U1_Clean_data_exp(top_insomnia_exp_male_S10, continuous = FALSE, save = FALSE)
maleIVs <- U2_extract_instruments(top_insomnia_exp_male_S10,
p = 5e-08,
clump = "online",
r2 = 0.001,
kb = 10000,
max_retries = 3,
pop = "EUR")
write_parquet(maleIVs, "C:/Users/hh24668/OneDrive - University of Bristol/Documents/maleIVs.parquet")
#filtered sex_combined_topsnps
insomnia_exp_both_sexes_S4 <- read_excel("C:/Users/hh24668/OneDrive - University of Bristol/Documents/insomnia_exp_both_sexes_S4.xlsx")
insomnia_exp_both_sexes_S4 <- U1_maf2eaf(insomnia_exp_both_sexes_S4)
top_insomnia_exp_both_sexes_S4 <- insomnia_exp_both_sexes_S4[insomnia_exp_both_sexes_S4$isTopSNPs == 1, ]
top_insomnia_exp_both_sexes_S4 <- dplyr::rename(top_insomnia_exp_both_sexes_S4, effect_allele = Allele1)
top_insomnia_exp_both_sexes_S4 <- dplyr::rename(top_insomnia_exp_both_sexes_S4, other_allele = Allele2)
top_insomnia_exp_both_sexes_S4 <- U1_Clean_data_exp(top_insomnia_exp_both_sexes_S4, continuous = FALSE, save = FALSE)
View(insomnia_exp_both_sexes_S4)
View(top_insomnia_exp_both_sexes_S4)
View(top_insomnia_exp_both_sexes_S4)
top_insomnia_exp_both_sexes_S4$ncontrol.exposure[top_insomnia_exp_both_sexes_S4$id.exposure == "insomnia_both_sexes"] <- 1771286
View(top_insomnia_exp_both_sexes_S4)
top_insomnia_exp_both_sexes_S4 <- U1_Clean_data_exp(top_insomnia_exp_both_sexes_S4, continuous = FALSE, save = FALSE)
top_insomnia_exp_both_sexes_S4$ncontrol.exposure <- 1771286
View(top_insomnia_exp_both_sexes_S4)
View(top_insomnia_exp_both_sexes_S4)
top_insomnia_exp_both_sexes_S4$samplesize.exposure <- 2365010
View(top_insomnia_exp_both_sexes_S4)
top_insomnia_exp_both_sexes_S4$ncontrol <- 1771286
top_insomnia_exp_both_sexes_S4$samplesize <- 2365010
sex_combined_IVs <- U2_extract_instruments(top_insomnia_exp_both_sexes_S4,
p = 5e-08,
clump = "online",
r2 = 0.001,
kb = 10000,
max_retries = 3,
pop = "EUR")
View(sex_combined_IVs)
write_parquet(sex_combined_IVs, "C:/Users/hh24668/OneDrive - University of Bristol/Documents/sex_combined_IVs.parquet")
View(femIVs)
write.csv(maleIVs, "C:/Users/hh24668/OneDrive - University of Bristol/Documents/maleIVs.csv", row.names = FALSE)
write.csv(femIVs, "C:/Users/hh24668/OneDrive - University of Bristol/Documents/femIVs.csv", row.names = FALSE)
write.csv(sex_combined_IVs, "C:/Users/hh24668/OneDrive - University of Bristol/Documents/sex_combined_IVs.csv", row.names = FALSE)
res <- read.csv("C:/Users/hh24668/OneDrive - University of Bristol/Documents/finngen_R11_N14_ENDOMETRIOSIS_ASRM_STAGE1_2.csv", header = TRUE)
library(ggplot2)
library(ggrepel)
library(grid)
library(gridExtra)
library(forestploter)
library(dplyr)
library(scales)
ci_colors <- c("#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd", "#8c564b", "#e377c2")
tm <- forest_theme(
base_size = 10,  # Font size
ci_pch = 20,     # Point shape
ci_col = ci_colors,  # Custom colors for confidence intervals
ci_alpha = 0.8,      # Transparency
ci_lty = 1,          # Line type
ci_lwd = 2.3,        # Line width
ci_Theight = 0.2,    # T-shaped ends
arrow_type = "closed",
refline_gp = gpar(lwd = 1.5, lty = "dashed", col = "red"), # Reference line
summary_fill = ci_colors,  # Fill colors
summary_col = ci_colors,  # Summary colors
footnote_gp = gpar(cex = 1.1, fontface = "italic", col = "red"),
legend_value = c("IVW", "MR-Egger", "Weighted Median", "Simple Mode", "Weighted Mode", "MR-PRESSO", "cML")
)
df <- res[, c(
"id.exposure", "id.outcome",
"nsnp_Inverse.variance.weighted", "logor_Inverse.variance.weighted", "logor_lci95_Inverse.variance.weighted", "logor_uci95_Inverse.variance.weighted", "logOR..95..CI._Inverse.variance.weighted", "se_Inverse.variance.weighted", "pval_Inverse.variance.weighted",
"nsnp_MR.Egger", "logor_MR.Egger", "logor_lci95_MR.Egger", "logor_uci95_MR.Egger", "logOR..95..CI._MR.Egger", "se_MR.Egger", "pval_MR.Egger",
"nsnp_Weighted.median", "logor_Weighted.median", "logor_lci95_Weighted.median", "logor_uci95_Weighted.median", "logOR..95..CI._Weighted.median", "se_Weighted.median", "pval_Weighted.median",
"nsnp_Simple.mode", "logor_Simple.mode", "logor_lci95_Simple.mode", "logor_uci95_Simple.mode", "logOR..95..CI._Simple.mode", "se_Simple.mode", "pval_Simple.mode",
"nsnp_Weighted.mode", "logor_Weighted.mode", "logor_lci95_Weighted.mode", "logor_uci95_Weighted.mode", "logOR..95..CI._Weighted.mode", "se_Weighted.mode", "pval_Weighted.mode",
"nsnp_MR_PRESSO", "logor_MR_PRESSO", "logor_lci95_MR_PRESSO", "logor_uci95_MR_PRESSO", "logOR..95..CI._MR_PRESSO", "se_MR_PRESSO", "pval_MR_PRESSO",
"nSNP_cML", "logor_cML", "logor_lci95_cML", "logor_uci95_cML", "logOR..95..CI._cML", "se_cML", "Pvalue"
)]
df <- data.frame(
Exposure = c(df$id.exposure[1], rep("", 6)),
Outcome = c(df$id.outcome[1], rep("", 6)),
nSNP = c(df$nsnp_Inverse.variance.weighted[1], df$nsnp_MR.Egger[1], df$nsnp_Weighted.median[1], df$nsnp_Simple.mode[1], df$nsnp_Weighted.mode[1], df$nsnp_MR_PRESSO[1], df$nSNP_cML[1]),
OR = c(df$logor_Inverse.variance.weighted[1], df$logor_MR.Egger[1], df$logor_Weighted.median[1], df$logor_Simple.mode[1], df$logor_Weighted.mode[1], df$logor_MR_PRESSO[1], df$logor_cML[1]),
lo_ci = c(df$logor_lci95_Inverse.variance.weighted[1], df$logor_lci95_MR.Egger[1], df$logor_lci95_Weighted.median[1], df$logor_lci95_Simple.mode[1], df$logor_lci95_Weighted.mode[1], df$logor_lci95_MR_PRESSO[1], df$logor_lci95_cML[1]),
up_ci = c(df$logor_uci95_Inverse.variance.weighted[1], df$logor_uci95_MR.Egger[1], df$logor_uci95_Weighted.median[1], df$logor_uci95_Simple.mode[1], df$logor_uci95_Weighted.mode[1], df$logor_uci95_MR_PRESSO[1], df$logor_uci95_cML[1]),
`OR (95% CI)` = c(df$`logOR..95..CI._Inverse.variance.weighted`[1], df$`logOR..95..CI._MR.Egger`[1], df$`logOR..95..CI._Weighted.median`[1], df$`logOR..95..CI._Simple.mode`[1], df$`logOR..95..CI._Weighted.mode`[1], df$`logOR..95..CI._MR_PRESSO`[1], df$`logOR..95..CI._cML`[1]),
se = c(df$se_Inverse.variance.weighted[1], df$se_MR.Egger[1], df$se_Weighted.median[1], df$se_Simple.mode[1], df$se_Weighted.mode[1], df$se_MR_PRESSO[1], df$se_cML[1]),
P = c(df$pval_Inverse.variance.weighted[1], df$pval_MR.Egger[1], df$pval_Weighted.median[1], df$pval_Simple.mode[1], df$pval_Weighted.mode[1], df$pval_MR_PRESSO[1], df$Pvalue[1]),
Method = c("IVW", "MR-Egger", "Weighted Median", "Simple Mode", "Weighted Mode", "MR-PRESSO", "cML")
)
df <- df %>%
mutate(` ` = paste(rep(" ", 30), collapse = " ")) %>%  # close the `mutate()` properly
select(Exposure, Outcome, nSNP, Method, OR, lo_ci, up_ci, se, ` `, `OR..95..CI.`, P) %>%  # adjust the column order
rename(`OR (95% CI)` = `OR..95..CI.`) %>%
mutate(P = scientific(P, digits = 3))  # Convert P-value to scientific notation with 3 digits
df_clean <- na.omit(df)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 6),
ticks_at = c(0, 1, 2, 3, 4, 5, 6),
theme = tm,
ci_col = ci_colors
)
print(p1)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
res <- read.csv("C:/Users/hh24668/OneDrive - University of Bristol/Documents/finngen_R12_CD2_BENIGN_LEIOMYOMA_UTERI.csv", header = TRUE)
df <- res[, c(
"id.exposure", "id.outcome",
"nsnp_Inverse.variance.weighted", "logor_Inverse.variance.weighted", "logor_lci95_Inverse.variance.weighted", "logor_uci95_Inverse.variance.weighted", "logOR..95..CI._Inverse.variance.weighted", "se_Inverse.variance.weighted", "pval_Inverse.variance.weighted",
"nsnp_MR.Egger", "logor_MR.Egger", "logor_lci95_MR.Egger", "logor_uci95_MR.Egger", "logOR..95..CI._MR.Egger", "se_MR.Egger", "pval_MR.Egger",
"nsnp_Weighted.median", "logor_Weighted.median", "logor_lci95_Weighted.median", "logor_uci95_Weighted.median", "logOR..95..CI._Weighted.median", "se_Weighted.median", "pval_Weighted.median",
"nsnp_Simple.mode", "logor_Simple.mode", "logor_lci95_Simple.mode", "logor_uci95_Simple.mode", "logOR..95..CI._Simple.mode", "se_Simple.mode", "pval_Simple.mode",
"nsnp_Weighted.mode", "logor_Weighted.mode", "logor_lci95_Weighted.mode", "logor_uci95_Weighted.mode", "logOR..95..CI._Weighted.mode", "se_Weighted.mode", "pval_Weighted.mode",
"nsnp_MR_PRESSO", "logor_MR_PRESSO", "logor_lci95_MR_PRESSO", "logor_uci95_MR_PRESSO", "logOR..95..CI._MR_PRESSO", "se_MR_PRESSO", "pval_MR_PRESSO",
"nSNP_cML", "logor_cML", "logor_lci95_cML", "logor_uci95_cML", "logOR..95..CI._cML", "se_cML", "Pvalue"
)]
df <- data.frame(
Exposure = c(df$id.exposure[1], rep("", 6)),
Outcome = c(df$id.outcome[1], rep("", 6)),
nSNP = c(df$nsnp_Inverse.variance.weighted[1], df$nsnp_MR.Egger[1], df$nsnp_Weighted.median[1], df$nsnp_Simple.mode[1], df$nsnp_Weighted.mode[1], df$nsnp_MR_PRESSO[1], df$nSNP_cML[1]),
OR = c(df$logor_Inverse.variance.weighted[1], df$logor_MR.Egger[1], df$logor_Weighted.median[1], df$logor_Simple.mode[1], df$logor_Weighted.mode[1], df$logor_MR_PRESSO[1], df$logor_cML[1]),
lo_ci = c(df$logor_lci95_Inverse.variance.weighted[1], df$logor_lci95_MR.Egger[1], df$logor_lci95_Weighted.median[1], df$logor_lci95_Simple.mode[1], df$logor_lci95_Weighted.mode[1], df$logor_lci95_MR_PRESSO[1], df$logor_lci95_cML[1]),
up_ci = c(df$logor_uci95_Inverse.variance.weighted[1], df$logor_uci95_MR.Egger[1], df$logor_uci95_Weighted.median[1], df$logor_uci95_Simple.mode[1], df$logor_uci95_Weighted.mode[1], df$logor_uci95_MR_PRESSO[1], df$logor_uci95_cML[1]),
`OR (95% CI)` = c(df$`logOR..95..CI._Inverse.variance.weighted`[1], df$`logOR..95..CI._MR.Egger`[1], df$`logOR..95..CI._Weighted.median`[1], df$`logOR..95..CI._Simple.mode`[1], df$`logOR..95..CI._Weighted.mode`[1], df$`logOR..95..CI._MR_PRESSO`[1], df$`logOR..95..CI._cML`[1]),
se = c(df$se_Inverse.variance.weighted[1], df$se_MR.Egger[1], df$se_Weighted.median[1], df$se_Simple.mode[1], df$se_Weighted.mode[1], df$se_MR_PRESSO[1], df$se_cML[1]),
P = c(df$pval_Inverse.variance.weighted[1], df$pval_MR.Egger[1], df$pval_Weighted.median[1], df$pval_Simple.mode[1], df$pval_Weighted.mode[1], df$pval_MR_PRESSO[1], df$Pvalue[1]),
Method = c("IVW", "MR-Egger", "Weighted Median", "Simple Mode", "Weighted Mode", "MR-PRESSO", "cML")
)
df <- df %>%
mutate(` ` = paste(rep(" ", 30), collapse = " ")) %>%  # close the `mutate()` properly
select(Exposure, Outcome, nSNP, Method, OR, lo_ci, up_ci, se, ` `, `OR..95..CI.`, P) %>%  # adjust the column order
rename(`OR (95% CI)` = `OR..95..CI.`) %>%
mutate(P = scientific(P, digits = 3))  # Convert P-value to scientific notation with 3 digits
df_clean <- na.omit(df)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 7),
ticks_at = c(0, 1, 2, 3, 4, 5, 6, 7),
theme = tm,
ci_col = ci_colors
)
print(p1)
p1 <- forest(
df_clean[, c(3:4, 9:11)],
est = df_clean$OR,
lower = df_clean$lo_ci,
upper = df_clean$up_ci,
sizes = df_clean$se,
ci_column = 3,
ref_line = 1,
xlim = c(0, 4),
ticks_at = c(0, 1, 2, 3, 4),
theme = tm,
ci_col = ci_colors
)
print(p1)
remove.packages("mrfunctions")
library(TwoSampleMR) #version 0.6.8
library(Oneclick) #version 5.3.0
library(mrfunctions) #my own R package
library(readxl)
library(arrow)
library(data.table)
library(dplyr)
insomnia_fem_ivs <- read_parquet("C:/Users/hh24668/OneDrive - University of Bristol/Documents/insomnia.parquet")
insomnia_fem_ivs <- U2_extract_instruments(insomnia_fem_ivs,
p = 5e-08,
clump = "online",
r2 = 0.001,
kb = 10000,
max_retries = 3,
pop = "EUR")
usethis::edit_r_environ()
insomnia_fem_ivs <- U2_extract_instruments(insomnia_fem_ivs,
p = 5e-08,
clump = "online",
r2 = 0.001,
kb = 10000,
max_retries = 3,
pop = "EUR")
check_eaf <- function(dat, pop = "EUR") {
required_cols <- c("eaf.exposure", "eaf.outcome")
# Check if required columns exist in the dataset
missing_cols <- setdiff(required_cols, colnames(dat))
if (length(missing_cols) > 0) {
stop(paste("The following required columns are missing in the dataset:", paste(missing_cols, collapse = ", ")))
}
# Check EAF for exposure
missing_exposure_eaf <- which(is.na(dat$eaf.exposure))
if (length(missing_exposure_eaf) == 0) {
message("\n\nAll SNPs in the exposure data have complete EAF. No action is needed.\n\n")
} else {
message(sprintf("%d SNPs in the exposure data are missing EAF values.\n", length(missing_exposure_eaf)))
message("Consider using a different GWAS dataset or providing a reference panel for imputation.\n")
}
# Check EAF for outcome
missing_outcome_eaf <- which(is.na(dat$eaf.outcome))
if (length(missing_outcome_eaf) == 0) {
message("\n\nAll SNPs in the outcome data have complete EAF. No action is needed.\n\n")
} else {
message(sprintf("%d SNPs in the outcome data are missing EAF values.\n", length(missing_outcome_eaf)))
message("Consider using a different GWAS dataset or providing a reference panel for imputation.\n")
}
return(dat)
}
